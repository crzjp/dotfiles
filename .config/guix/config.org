#+title: My desktop configuration

* Channels

#+begin_src scheme :tangle channels.scm
(use-modules (guix ci))

(list (channel-with-substitutes-available
       %default-guix-channel "https://ci.guix.gnu.org")
      (channel
       (name 'guix)
       (url "https://git.savannah.gnu.org/git/guix.git")
       (introduction
        (make-channel-introduction
         "9edb3f66fd807b096b48283debdcddccfea34bad"
         (openpgp-fingerprint
          "BBB0 2DDF 2CEA F6A8 0D1D  E643 A2A0 6DF2 A33A 54FA"))))
      (channel
       (name 'nonguix)
       (url "https://gitlab.com/nonguix/nonguix")
       (introduction
        (make-channel-introduction
         "897c1a470da759236cc11798f4e0a5f7d4d59fbc"
         (openpgp-fingerprint
          "2A39 3FFF 68F4 EF7A 3D29  12AF 6F51 20A0 22FB B2D5")))))
#+end_src

* System
:properties:
:header-args: :tangle system.scm
:end:

** Modules

#+begin_src scheme
(use-modules
 (gnu)
 (gnu packages certs)
 (gnu packages disk)
 (gnu packages file-systems)
 (gnu packages freedesktop)
 (gnu packages glib)
 (gnu packages gnupg)
 (gnu packages linux)
 (gnu packages texinfo)
 (gnu packages version-control)
 (gnu packages xorg)
 (gnu services base)
 (gnu services desktop)
 (gnu services networking)
 (gnu services ssh)
 (gnu services xorg)
 (nongnu packages linux))
#+end_src

** System information

#+begin_src scheme
(operating-system
 (kernel linux)
 (firmware (list linux-firmware))
 (locale "en_US.utf8")
 (timezone "America/Bahia")
 (keyboard-layout (keyboard-layout "br" "abnt2"))
 (host-name "batatinha")
#+end_src

** User accounts

#+begin_src scheme
 (users (cons* (user-account
                (name "crzjp")
                (comment "JoÃ£o Paulo da Cruz")
                (group "users")
                (home-directory "/home/crzjp")
                (supplementary-groups '("wheel" "netdev" "audio" "video" "input" "tty")))
               %base-user-accounts))
#+end_src

** Packages

#+begin_src scheme
 (packages (cons* alsa-lib
                  alsa-utils
                  dbus
                  dosfstools
                  elogind
                  exfat-utils
                  exfatprogs
                  fuse-exfat
                  git
                  gnupg
                  libinput
                  nss-certs
                  texinfo
                  xf86-input-keyboard
                  xf86-input-libinput
                  xf86-input-mouse
                  xf86-input-synaptics
                  xf86-video-intel
                  %base-packages))
#+end_src

** Services

#+begin_src scheme
 (services
  (cons* (service dhcp-client-service-type)
         (service elogind-service-type)
         (service ntp-service-type)
         (service xorg-server-service-type
                  (xorg-configuration
                   (keyboard-layout keyboard-layout)))
         (modify-services %base-services
                          (guix-service-type config =>
                                             (guix-configuration
                                              (inherit config)
                                              (substitute-urls
                                               (append (list "https://substitutes.nonguix.org")
                                                       %default-substitute-urls))
                                              (authorized-keys
                                               (append (list (local-file "./signing-key.pub"))
                                                       %default-authorized-guix-keys)))))))
#+end_src

Public key

#+begin_src scheme :tangle signing-key.pub
(public-key
 (ecc
  (curve Ed25519)
  (q #C1FD53E5D4CE971933EC50C9F307AE2171A2D3B52C804642A7A35F84F3A4EA98#)))
#+end_src

** Bootloader and file systems

#+begin_src scheme
 (bootloader (bootloader-configuration
              (bootloader grub-bootloader)
              (targets (list "/dev/sda"))
              (keyboard-layout keyboard-layout)))

 (swap-devices (cons* (swap-space
                       (target (file-system-label "SWAP")))))

 (file-systems (cons* (file-system
                       (mount-point "/")
                       (device (file-system-label "ROOT"))
                       (type "ext4"))
                      %base-file-systems)))
#+end_src

* Home
:properties:
:header-args: :tangle home.scm
:end:

** Modules

#+begin_src scheme
(use-modules
 (gnu packages)
 (gnu services)
 (gnu home services gnupg)
 (gnu home services xdg)
 (gnu packages admin)
 (gnu packages bittorrent)
 (gnu packages chromium)
 (gnu packages compression)
 (gnu packages curl)
 (gnu packages dunst)
 (gnu packages emacs)
 (gnu packages emacs-xyz)
 (gnu packages fonts)
 (gnu packages fontutils)
 (gnu packages gnome)
 (gnu packages gnome-xyz)
 (gnu packages gnupg)
 (gnu packages imagemagick)
 (gnu packages java)
 (gnu packages lisp)
 (gnu packages mail)
 (gnu packages mpd)
 (gnu packages package-management)
 (gnu packages ssh)
 (gnu packages telegram)
 (gnu packages video)
 (gnu packages wm)
 (gnu packages xdisorg)
 (gnu packages xorg)
 (nongnu packages clojure))
#+end_src

** Packages

#+begin_src scheme
(home-environment
 (packages (cons* curl
                  dunst
                  emacs
                  emacs-flymake-shellcheck
                  emacs-pdf-tools
                  emacs-vterm
                  ffmpeg
                  font-awesome
                  font-google-noto
                  font-google-noto-emoji
                  font-google-noto-sans-cjk
                  font-google-noto-serif-cjk
                  font-iosevka-aile
                  font-iosevka-comfy
                  fontconfig
                  hsetroot
                  isync
                  imagemagick
                  leiningen
                  libnotify
                  maim
                  materia-theme
                  mpd
                  mpd-mpc
                  mpdscribble
                  mpv
                  msmtp
                  mu
                  numlockx
                  `(,openjdk "jdk")
                  openssh
                  pinentry-emacs
                  sbcl
                  sbcl-stumpwm-ttf-fonts
                  slop
                  stow
                  stumpwm `(,stumpwm "lib")
                  sx
                  telegram-desktop
                  transmission
                  tree
                  ungoogled-chromium
                  unzip
                  xclip
                  xhost
                  xset
                  xsetroot
                  youtube-dl
                  (specifications->packages
                   (list "zip"))))
#+end_src

** Services

#+begin_src scheme
 (services
  (list (service home-gpg-agent-service-type
                 (home-gpg-agent-configuration
                  (extra-content (format #f "~@{~a~%~}"
                                         "allow-emacs-pinentry"
                                         "allow-loopback-pinentry"))))
        
        (service home-xdg-user-directories-service-type
                 (home-xdg-user-directories-configuration
                  (desktop     "$HOME/desktop")
                  (documents   "$HOME/documents")
                  (download    "$HOME/downloads")
                  (music       "$HOME/musics")
                  (pictures    "$HOME/pictures")
                  (publicshare "$HOME/public")
                  (templates   "$HOME/templates")
                  (videos      "$HOME/videos"))))))
#+end_src
