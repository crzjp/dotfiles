#+title: My desktop configuration

* Channels

#+begin_src scheme :tangle channels.scm
(list (channel
       (name 'guix)
       (url "https://git.savannah.gnu.org/git/guix.git")
       (introduction
        (make-channel-introduction
         "9edb3f66fd807b096b48283debdcddccfea34bad"
         (openpgp-fingerprint
          "BBB0 2DDF 2CEA F6A8 0D1D  E643 A2A0 6DF2 A33A 54FA"))))
      (channel
       (name 'nonguix)
       (url "https://gitlab.com/nonguix/nonguix")
       (introduction
        (make-channel-introduction
         "897c1a470da759236cc11798f4e0a5f7d4d59fbc"
         (openpgp-fingerprint
          "2A39 3FFF 68F4 EF7A 3D29  12AF 6F51 20A0 22FB B2D5")))))
#+end_src

* System
:properties:
:header-args: :tangle system.scm
:end:

** Modules

#+begin_src scheme
(use-modules (gnu) (nongnu packages linux))
(use-package-modules glib certs xdisorg xorg)
(use-service-modules base desktop networking ssh xorg)
#+end_src

** System information

#+begin_src scheme
(operating-system
 (kernel linux)
 (firmware (list linux-firmware))
 (locale "en_US.utf8")
 (timezone "America/Bahia")
 (keyboard-layout (keyboard-layout "br"))
 (host-name "batatinha")
#+end_src

** User accounts

#+begin_src scheme
 (users (cons* (user-account
                (name "crzjp")
                (comment "JoÃ£o Paulo da Cruz")
                (group "users")
                (home-directory "/home/crzjp")
                (supplementary-groups '("wheel" "netdev" "audio" "video" "input" "tty")))
               %base-user-accounts))
#+end_src

** Packages

#+begin_src scheme
 (packages (cons* alsa-lib
                  alsa-utils
                  dbus
                  elogind
                  libinput
                  nss-certs
                  pavucontrol
                  xf86-input-evdev
                  xf86-input-keyboard
                  xf86-input-libinput
                  xf86-input-libinput
                  xf86-input-mouse
                  xf86-input-synaptics
                  xf86-video-fbdev
                  xf86-video-intel
                  xf86-video-intel
                  xf86-video-vesa
                  %base-packages))
#+end_src

** Services

#+begin_src scheme
 (services
  (cons* (service dhcp-client-service-type)
         (service ntp-service-type)
         (service xorg-server-service-type
                  (xorg-configuration
                   (keyboard-layout keyboard-layout)
                   (extra-config "Section \"InputClass\"
  Identifier \"Keyboards\"
  Driver \"libinput\"
  MatchDevicePath \"/dev/input/event*\"
  MatchIsKeyboard \"on\"
EndSection
")))
         (modify-services %base-services
                          (guix-service-type config =>
                                             (guix-configuration
                                              (inherit config)
                                              (substitute-urls
                                               (append (list "https://substitutes.nonguix.org")
                                                       %default-substitute-urls))
                                              (authorized-keys
                                               (append (list (local-file "./signing-key.pub"))
                                                       %default-authorized-guix-keys)))))))
#+end_src

Public key

#+begin_src scheme :tangle signing-key.pub
(public-key
 (ecc
  (curve Ed25519)
  (q #C1FD53E5D4CE971933EC50C9F307AE2171A2D3B52C804642A7A35F84F3A4EA98#)))
#+end_src

** Bootloader and file systems

#+begin_src scheme
 (bootloader (bootloader-configuration
              (bootloader grub-bootloader)
              (targets (list "/dev/sda"))
              (keyboard-layout keyboard-layout)))

 (swap-devices (list (swap-space
                      (target (uuid
                               "24fd9adc-c6cb-480a-95cb-ce0b76c8f933")))))

 (file-systems (cons* (file-system
                       (mount-point "/home")
                       (device (uuid
                                "1e13bd7c-3822-4675-9b05-9fe2d6330207"
                                'ext4))
                       (type "ext4"))
                      (file-system
                       (mount-point "/boot")
                       (device (uuid
                                "c776ac14-6a55-48ac-9026-413e80ab4025"
                                'ext4))
                       (type "ext4"))
                      (file-system
                       (mount-point "/")
                       (device (uuid
                                "f3449f5a-1b4a-4f18-8161-5d97854c29b6"
                                'ext4))
                       (type "ext4")) %base-file-systems)))
#+end_src

* Home
:properties:
:header-args: :tangle home.scm
:end:

** Modules

#+begin_src scheme :noweb yes
(use-modules (gnu home)
             (gnu packages)
             (gnu packages wm)
             (gnu services)
             (gnu home services)
             (gnu home services xdg)
             (guix gexp))
#+end_src

** Packages

#+begin_src scheme :noweb yes
(home-environment
 (packages (specifications->packages
            (list "curl"
                  "dunst"
                  "emacs"
                  "emacs-pdf-tools"
                  "emacs-vterm"
                  "font-awesome"
                  "font-google-noto"
                  "font-google-noto-emoji"
                  "font-google-noto-sans-cjk"
                  "font-google-noto-serif-cjk"
                  "font-iosevka"
                  "font-iosevka-aile"
                  "fontconfig"
                  "git"
                  "gnupg"
                  "libnotify"
                  "maim"
                  "materia-theme"
                  "mg"
                  "mpd"
                  "mpd-mpc"
                  "mpv"
                  "numlockx"
                  "openssh"
                  "pinentry-emacs"
                  "sbcl"
                  "sbcl-stumpwm-ttf-fonts"
                  "setxkbmap"
                  "slock"
                  "slop"
                  "stumpwm"
                  `(,stumpwm "lib")
                  "sx"
                  "telegram-desktop"
                  "ungoogled-chromium"
                  "xclip"
                  "xhost"
                  "xrdb"
                  "xset"
                  "xsetroot"
                  "youtube-dl")))
#+end_src

** Services

#+begin_src scheme :noweb yes
 (services
  (list (service home-xdg-user-directories-service-type
                 (home-xdg-user-directories-configuration
                  (desktop     "$HOME/desktop")
                  (documents   "$HOME/documents")
                  (download    "$HOME/downloads")
                  (music       "$HOME/musics")
                  (pictures    "$HOME/pictures")
                  (publicshare "$HOME/public")
                  (templates   "$HOME/templates")
                  (videos      "$HOME/videos"))))))
#+end_src

